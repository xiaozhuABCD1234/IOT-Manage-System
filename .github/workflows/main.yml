name: CI-CD 部署 IoT 系统

on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      # 如果各服务镜像想推到 GHCR，就保留；纯本地 build 可删掉
      - name: 登录 GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # 一键构建所有镜像（docker-compose.yml 里用了 build: 上下文）
      - name: 构建镜像
        run: |
          docker compose build

      # 可选：把镜像推到 GHCR，方便多节点复用
      - name: 推送镜像
        run: |
          docker compose push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      # 1. 把 compose 文件+config+sql 上传到服务器
      - name: 同步部署文件到服务器
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.Server_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,config,sql"
          target: "~/iot-manage"
          strip_components: 0 # 保持目录层级

      # 2. 远程启动
      - name: 远程 docker compose up
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.Server_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd ~/iot-manage
            docker compose pull
            docker compose down --remove-orphans
            docker compose up -d
            docker compose ps
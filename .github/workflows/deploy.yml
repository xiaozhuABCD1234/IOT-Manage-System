name: 自动化部署
on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: 自动化部署
    runs-on: ubuntu-latest
    env:
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_IP: ${{ secrets.SERVER_IP }}

    steps:
      - name: 读取仓库内容
        uses: actions/checkout@v4

      - name: 设置 SSH 密钥
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: 安装依赖
        run: npm install
        working-directory: ./frontend

      - name: 构建并复制前端
        run: |
          npm run build
          cp -r dist ../backend
        working-directory: ./frontend

      - name: 上传文件
        run: |
          tar -czvf deploy-pkg.tar.gz \
            backend \
            Dockerfile.alternative
          scp -o UserKnownHostsFile=/dev/null \
            -r ./deploy-pkg.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/IOT-Management-System

      - name: 解压并构建 Docker 镜像
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
            cd ~/IOT-Management-System
            tar -xzvf deploy-pkg.tar.gz
            docker build -t iot-management-system -f Dockerfile.alternative .
            docker stop dev-test || true
            docker rm dev-test || true
            docker run -d --name dev-test --restart unless-stopped -p 8000:8000 iot-management-system
          "
